package com.sample.web.controller;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URL;
import java.util.Properties;

import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.AddressException;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;
import javax.validation.Valid;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.ui.ModelMap;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.SessionAttributes;
import org.springframework.web.bind.support.SessionStatus;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import com.sample.service.UserService;
import com.sample.web.form.LoginForm;
import com.sample.web.view.User;

@Controller
@SessionAttributes({"LOGIN_USER", "LOGIN_TYPE"})
public class SigninController {

	@Autowired
	private UserService userService;

	@GetMapping("/signin.do")
	public String signinForm(Model model) {
		LoginForm loginForm = new LoginForm();
		model.addAttribute("loginForm", loginForm);

		return "user/signin";

	}

	@RequestMapping("/signin.do")
	public String signin(@ModelAttribute("loginForm") @Valid LoginForm loginForm, BindingResult errors, Model model) {

		if (errors.hasErrors()) {

			return "user/signin";
		}
		//로그인 처리
		User user = userService.loginUser(loginForm.getId(), loginForm.getPassword());
		if (user == null) {

			return "redirect:/signin.do?error=fail";

		}

		// 로그인된 사용자 정보를 세션에 저장
		model.addAttribute("LOGIN_USER", user);
		model.addAttribute("LOGIN_TYPE", "web");

		return "redirect:/home.do";

	}

	@GetMapping("/signout.do")
	public String signout(SessionStatus sessionStatus, HttpSession session) {
		sessionStatus.setComplete();


		return "redirect:/home.do";
	}



	@RequestMapping("/sendMail.do")
	public String mailSender( ModelMap mo) throws AddressException, MessagingException { 

		// 네이버일 경우 smtp.naver.com 을 입력합니다. 
		// Google일 경우 smtp.gmail.com 을 입력합니다. 

		String host = "smtp.naver.com"; 
		final String username = "aldus207"; //네이버 아이디를 입력해주세요. @nave.com은 입력하지 마시구요. 
		final String password = "dnjsal203"; //네이버 이메일 비밀번호를 입력해주세요.
		int port=465; //포트번호 

		// 메일 내용 
		String recipient = "aldus207"; //받는 사람의 메일주소를 입력해주세요. 
		String subject = "메일테스트"; //메일 제목 입력해주세요. 
		String body = username+"님으로 부터 메일을 받았습니다."; //메일 내용 입력해주세요. 

		Properties props = System.getProperties(); // 정보를 담기 위한 객체 생성 

		// SMTP 서버 정보 설정 
		props.put("mail.smtp.host", host); 
		props.put("mail.smtp.port", port); 
		props.put("mail.smtp.auth", true); 
		props.put("mail.smtp.ssl.enable", true); 
		props.put("mail.smtp.ssl.trust", host); 

		//Session 생성 
		Session session = Session.getDefaultInstance(props, new javax.mail.Authenticator() 
		{ 
			String un=username; 
			String pw=password; 
			protected javax.mail.PasswordAuthentication getPasswordAuthentication() { 
				return new javax.mail.PasswordAuthentication(un, pw); 
			} 
		}); 
		session.setDebug(true); //for debug 

		Message mimeMessage = new MimeMessage(session); //MimeMessage 생성 
		mimeMessage.setFrom(new InternetAddress("aldus207@naver.com")); //발신자 셋팅 , 보내는 사람의 이메일주소를 한번 더 입력합니다. 이때는 이메일 풀 주소를 다 작성해주세요. 
		mimeMessage.setRecipient(Message.RecipientType.TO, new InternetAddress("aldus207@naver.com")); //수신자셋팅 //.TO 외에 .CC(참조) .BCC(숨은참조) 도 있음 
		mimeMessage.setSubject(subject); //제목셋팅 
		mimeMessage.setText(body); //내용셋팅 
		Transport.send(mimeMessage); //javax.mail.Transport.send() 이용 
		System.out.println("실행");
		
		return "user/mailCompl";
	}


	@RequestMapping("/findId.do")
	public String findId(Model model) {

		return "user/findId";
	}
	
	@RequestMapping("/findPwd.do")
	public String findPwd(Model model) {
		
		return "user/findPwd";
	}



}	


