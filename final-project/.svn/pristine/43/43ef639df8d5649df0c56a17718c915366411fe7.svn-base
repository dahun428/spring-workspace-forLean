package com.sample.service;

import java.util.ArrayList;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.sample.dao.HallDao;
import com.sample.dao.MateDao;
import com.sample.dao.PerformanceDao;
import com.sample.dto.JsonHallSeat;
import com.sample.web.form.MateForm;
import com.sample.web.view.HallInfo;
import com.sample.web.view.Mate;
import com.sample.web.view.Performance;
import com.sample.web.view.PerformanceSchedule;

@Service
public class MateManagerServiceImpl implements MateManagerService{

	
	@Autowired
	PerformanceDao performanceDao;
	
	@Autowired
	HallDao hallDao;
	
	@Autowired
	MateDao mateDao;
	
	@Transactional
	public void addMate(MateForm mateForm) {
		
		
		//performance_main insert
		
		PerformanceSchedule performance = new PerformanceSchedule();
		performance.setInfoId(mateForm.getPerformance().getInfoId());
		HallInfo hallinfo = new HallInfo();
		hallinfo.setId(mateForm.getPerformance().getHallId());
		performance.setHallinfo(hallinfo);
		performance.setShowDate(mateForm.getPerformance().getShowDate());
		performance.setShowTime(mateForm.getPerformance().getShowTime()+":00");
		performance.setShowNumber(mateForm.getPerformance().getShowNumber());
		//퍼포먼스 인서트하기
		performanceDao.insertPerformanceSchedule(performance);
	
		//mate Seat그룹 만들기
		List<JsonHallSeat> list = mateForm.getSeats();
		
		int index = mateForm.getPerformance().getIndex();
		int indexOfMinus = index - 1;
		int size = list.size();
		
		//인서트할 List :: mate, hall
		List<Mate> mates = new ArrayList<>();
		List<JsonHallSeat> seats = new ArrayList<>();
		
		for(int i = 0; i < size - indexOfMinus; i++) {

			if(list.get(i).getMateNo() == list.get(i+indexOfMinus).getMateNo()) {
				String firstSeat = list.get(i).getSeatBlock();
				int firstRow = list.get(i).getSeatRow();
				int firstCol = list.get(i).getSeatCol();

				String secondSeat = list.get(i+indexOfMinus).getSeatBlock();
				int secondRow = list.get(i+indexOfMinus).getSeatRow();
				int secondCol = list.get(i+indexOfMinus).getSeatCol();

				
				StringBuffer seatGroup = new StringBuffer();
				seatGroup.append(firstSeat).append(firstRow).append("-").append(firstCol).append("~")
					.append(secondSeat).append(secondRow).append("-").append(secondCol);
				
				
				//메이트 객체 생성
				Mate mate = new Mate();
				Performance performanceMain = new Performance();
				//인서트한 퍼포먼스 얻어오기, mate객체의 performanceSchedul 대신 performance를 편의상 넣는다. 퍼포먼스 id 만 필요하기에..
				performanceMain.setId(performance.getId());
				mate.setPerformance(performanceMain);
				mate.setSeatGroup(seatGroup.toString());
				//메이트Groupsize에 ajax로부터 받아온 제한 인원수를 넣는다.
				mate.setGroupsize(index);
				
				String seatRate = list.get(i).getSeatRate();
				//좌석등급은 첫번째 list와 마지막 list 같을 때 넣으며, 다를 경우에 오류를 발생한다.
				if(list.get(i).getSeatRate().equals(list.get(i+indexOfMinus).getSeatRate())) {
					mate.setSeatRate(seatRate);
				} else {
					throw new RuntimeException("좌석 등급이 다릅니다. 다시 입력해주세요");
				}
				
				
				mates.add(mate);
			}

		}
		
		
		for(JsonHallSeat seat : list) {
			//홀Seat객체 생성
			JsonHallSeat hallSeat = new JsonHallSeat();
			//익서트한 퍼포먼스아이디 입력
			hallSeat.setPerformanceId(performance.getId());
			hallSeat.setSeatBlock(seat.getSeatBlock());
			hallSeat.setHallId(mateForm.getPerformance().getHallId());
			hallSeat.setSeatRow(seat.getSeatRow());
			hallSeat.setSeatCol(seat.getSeatCol());
			hallSeat.setSeatRate(seat.getSeatRate());

			seats.add(hallSeat);
		}
		
		List<Integer> mateIdArray = new ArrayList<>();
		for(Mate mate : mates) {
			mateDao.insertMate(mate);
			for(int i = 0; i < index; i++) {
				mateIdArray.add(mate.getId());
			}
		}
		int seatSize = seats.size();
		for(int i = 0; i < seatSize; i++) {
			seats.get(i).setMateNo(mateIdArray.get(i));
			hallDao.insertHallSeats(seats.get(i));
		}
		
	}
}