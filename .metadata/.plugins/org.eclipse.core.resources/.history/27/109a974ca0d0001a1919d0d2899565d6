Sprint myBatis 프로젝트
	1. Maven Project 생성
	2. 의존성 설정
		: Spring-context, Spring-jdbc, Spring-tx, myBatis, mybatis-spring
	3. 폴더 생성, spring Bean Configuration 파일, properties 파일, mybatis 환경설정파일 및 매퍼 파일 생성
		1) src/main/resources/spring
			: Spring Bean Configuration 파일이 사용하는 폴더
				* context-datasource.xml
				* context-tx.xml
				* context-mybatis.xml
				* context-
		2) src/main/resources/spring/config
			: Spring Environment Configuration 파일이 사용하는 폴더
				
				* database.properties
		
		3) src/main/resources/spring/mybatis
			: mybatis Configuration 파일이 사용하는폴더
				
				* mybatis-config.xml				
				(mybatis 환경설정 정보 추가 mapper 파일 추가)
		4) src/main/resources/spring/mybatis/mappers
			: 매핑된 SQL 파일이 사용하는 폴더
				* users.xml, blogs.xml, blogComments.xml		
	
	4. 	패키지 생성 및 필요한 인터페이스, 클래스 정의
		kr.co.jhta.dao, kr.co.jhta.dto, kr.co.jhta.service, 
		kr.co.jhta.vo, kr.co.jhta.controller 등을 정의
		
	5. 매퍼 인터페이스와 매퍼 파일을 연결시키기
		<mappers namespace="DAO인터페이스의 전체이름" />
	6. Spring bean Configuration 파일에 DataSource 설정
	7. Spring과 MyBatis 연동하기
		<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
			 <property name="configLocation" value="classpath:/mybatis/mybatis-config.xml" />
			 <property name="dataSource" ref="dataSource" />
		</bean>
			* myBatis의 핵심 객체 , SqlSessionFactory를 스프링 빈으로 등록시키는 SqlSessionFactoryBean을 등록한다.
	8. SQL 
		1.UserDao
			void insertUser(User user) 정의
		2.users.xml
			<insert id="insertUser" parameterType="User">
				SQL 구문
			</insert>	
	9. MapperScannerConfigurer를 스프링 컨테이너에 등록하기
		<mybatis-spring:scan base-package="매퍼 인터페이스의 전체 경로 "/>
		* 지정된 패키지에서 인터페이스를 검색해서 연관된 매퍼파일의 SQL을 실행하는 구현객체를 생성하고,
		스프링 컨테이너의 빈으로 등록한다.
		* UserDao, BlogDao, BlogCommentDao의 구현 객체가 필요한 xxxServiceImpl
		Database Access 작업이 필요한 경우, 의존성 주입을 받을 수 있다.
		
		public class UserServiceImpl implements UserService{
			
		}		
			
	
		