<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<!-- 
	MapperScannerConfigurer, <mybatis-spring:scan /> 을 이용한 매퍼 인터페이스
	구현객체 등록하기
		1. 매퍼 인터페이싀 정의
		kr.co.jhta.dao.UserDao 인터페이스 작성
		2. 매퍼 인터페이스에 Database Access 작업에 대한 스펙 정의
			void insertUser(User user);
			User getUserById(String userId);
		3. 매퍼 파일 정의
			/scr/main/resources/mybatis/mappers/users.xml
		4. 매퍼 파일과 매퍼 인터페이스를 연결시킨다.
			<mapper namespace = "kr.co.jhta.dao.UserDao">
		5. 매퍼 인터페이스에서 정의한 Database Access 작업의 스펙에 맞는 SQL을 매퍼	 파일에 정의한다.
			<insert id="insertUser" parameterClass="User">
				SQL
			</insert>
			<select id="getUserById" parameterType="string" resultType="User">
				SQL
			</select>
		6. context.xml에서 SqlSessionFactory 빈을 등록시키고, 
			<mybatis-spring:scan base-package="매퍼인터페이스를 포함하고 있는 패키지"/>
			를 정의한다.
		7.	mybatis-spring.jar 에서 제공하는 MapperScannerConfigurer는 
			매퍼 파일에 정의된 쿼리를 실행하는 매퍼 인터페이싀 구현객체를 

 -->
<mapper namespace="kr.co.jhta.dao.UserDao">
	<select id="getUserById" parameterType="string" resultType="User">
		select
			user_id as id,
			user_name as name,
			user_password as password,
			user_email as email,
		from
			spring_users
		where
			user_id = #{value}
	</select>


</mapper>