<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">

<!--  태그만 등록하면됨 -->
<context:annotation-config></context:annotation-config>
<!-- 
	지정된 패키지 및 그 하위 패키지에서
	@Component, @controller, @ControllerAdvice, @RestController,
	@Service, @Repository 등의 Annotation 이 부착된 모든 클래스를 검색해서
	자동으로 스프링 컨테이너가 객체를 생성한다.
 -->
<context:component-scan base-package="kr.co.jhta.di.di"></context:component-scan>

<!-- 
	location 으로 지정된 경로에서 spring.properties 파일을 읽어와서
	파일의 내용을 key와 value로 구분해서 그 정보를 가지고 있는 객체가
	스프링 컨테이너가 생성한다.
	그정보는 아래와 같이 사용된다.
	* 객체 생성을 수동으로 설정하는 경우
	<bean class="x.y.z.SmsMessageSender">
		<property name="company' value="${message.sender.sms.company"></property>
	</bean>
	*객체생성을 자동으로 하는 경우
	
	@Value(${message.sender.sms.company})
	private String company;
 -->

<context:property-placeholder location="classpath:/config/spring.properties"/>

<!--
	@Component = 아래의 모든 어노테이션 부모
		@Controller = mvc 컨트롤러
		@ControllerAdvivce
		@Service = xxxService 객체(업무로직)
		@Repository  xxxDAO (DBAccess)
		@RestController = REST API
 -->

</beans>
